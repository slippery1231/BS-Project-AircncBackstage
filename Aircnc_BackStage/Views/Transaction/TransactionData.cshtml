@{ Layout = "_GetTransactionDataLayout.cshtml";}


<!-- Begin Page Content -->
<div id="app" style="height: 100%;">
    <div class="my-2">
        <div class="row">
            <div class="col-10">
                <b-form-group label="關鍵字搜尋" label-for="filter-input" label-cols-sm="3" label-align-sm="right"
                              label-size="sm" class="mb-0">
                    <b-input-group size="sm">
                        <b-form-input id="filter-input" v-model="filter" type="search" placeholder="請輸入關鍵字">
                        </b-form-input>

                        <b-input-group-append>
                            <b-button :disabled="!filter" v-on:click="filter = ''">Clear</b-button>
                        </b-input-group-append>
                    </b-input-group>
                </b-form-group>

            </div>

        </div>
    </div>
    <div class="card mb-4">
        <b-table striped hover id="table" :fields="fields" :items="dataList"
                 label-sort-asc="" label-sort-desc="" label-sort-clear=""
                 :per-page="perPage" :current-page="currentPage"
                 :filter="filter" :filter-included-fields="filterOn" v-on:filtered="onFiltered">

            <!-- 詳細按鈕 -->
            <template #cell(Detail)="row">
                <b-button v-on:click="row.toggleDetails" class="detail-btn">詳細</b-button>
            </template>

            <!--撥款-->
            <template #cell(Fund)="row">
                <b-button class="btn-danger" v-on:click="update(row.item.transactionStatusId)" :disabled="checkUpdated(row.item.statusType)">撥款</b-button>
            </template>

            <!-- 查看詳情的card -->
            <template #row-details="row">
                <b-card>
                    <ul>
                        @*<li v-for="(value,key) in row.item" :key="key">{{toChinese(key) }} : {{value}}</li>*@
                        <li>交易編號:{{row.item.transactionStatusId}}</li>
                        <li>下訂時間:{{row.item.createTime}}</li>
                        <li>房東會員編號:{{row.item.userId}}</li>
                        <li>房東姓名:{{row.item.name}}</li>
                        <li>入住時間:{{row.item.checkIn}}</li>
                        <li>退房時間:{{row.item.checkOut}}</li>
                        <li>總金額:{{row.item.totalAmount}}</li>
                        <li>交易狀況:{{row.item.statusType}}</li>
                        <li hidden>{{row.item._showDetails}}</li>

                    </ul>
                </b-card>
            </template>

        </b-table>

        <!-- 分頁功能 -->
        <div class="mt-3">
            <b-pagination v-model="currentPage" :total-rows="rows" align="center" :per-page="perPage" aria-controls="table">
            </b-pagination>
        </div>
    </div>

</div>
<!-- End of Main Content -->

@section topCSS{
    <style>
        .detail-btn {
            background-color: #1cc88a
        }
    </style>

}


@section endJS{
    <script>
        let app = new Vue({
            el: '#app',
            data: {
                fields: [
                    { key: 'transactionStatusId', label: '交易編號', sortable: true },
                    //{ key: 'orderId', label: '訂單編號' },
                    { key: 'userId', label: '房東會員編號' ,sortable:true},
                    { key: 'name', label: '房東姓名' },
                    { key: 'createTime', label: '下訂時間', sortable:true },
                    { key: 'Detail', label: '查看詳情' },
                    { key: 'Fund', label: '撥款' }
                ],
                dataList: [],
                perPage: 10,
                currentPage: 1,
                filter: null,
                filterOn: [],

            },
            methods: {
                getData() {
                    fetch('/api/GetTransactionData/GetAllTransactionData', {
                        headers: {
                            'Content-type': 'application/json',
                            'Authorization': GenCurrentAuthBarerFormat(),
                        },
                        method: 'Get',
                    })
                        .then(response => response.json())
                        .then(jsondata => {
                            console.log(jsondata)
                            this.dataList = jsondata
                        })
                },
                onFiltered(filteredItems) {
                    // Trigger pagination to update the number of buttons/pages due to filtering
                    this.totalRows = filteredItems.length
                    this.currentPage = 1
                },
                //toChinese(key) {
                //    switch (key) {
                //        case 'transactionStatusId':
                //            return '交易編號'
                //        case 'userId':
                //            return '房東會員編號'
                //        case 'name':
                //            return '房東姓名'
                //        case 'createTime':
                //            return '下訂時間'
                //        case 'totalAmount':
                //            return '總金額'
                //        case 'statusType':
                //            return '交易狀況'
                //        case 'checkIn':
                //            return '入住日期'
                //        case 'checkOut':
                //            return '退房日期'

                //    }
                //},
                update(transactionStatusId) {
                    console.log(transactionStatusId)
                    alert('確定要對該交易撥款?')
                    fetch('/api/GetTransactionData/UpdateTransactionStatus', {
                        headers: {
                            'Content-type': 'application/json',
                            'Authorization': GenCurrentAuthBarerFormat(),
                        },
                        body: JSON.stringify(transactionStatusId),
                        method:'Post',
                    })
                        .then(response => response.json())
                        .then(jsondata => {
                            //console.log(jsondata)
                            this.dataList = jsondata
                            window.location.reload()
                        })
                },
                checkUpdated(msg) {
                    if (msg == '已完成撥款') {
                        return true
                    }
                    else {
                        return false
                    }
                }
            },
            created() {
                this.getData()
            },
            computed: {
                rows() {
                    return this.dataList.length
                }
            }

        })

    </script>

}